const PLUGIN_NAME = 'acecode',
  BUTTON_TOOL_TIP = 'Toggle code view mode';
tinymce.PluginManager.add('acecode', function (e, t) {
  const n = { inline: null, fullscreen: null },
    o = {
      theme: 'ace/theme/eclipse',
      mode: 'ace/mode/html',
      options: { wrap: e.getParam('code_editor_wrap'), displayIndentGuides: !0, showPrintMargin: !1 }
    },
    i = e.getParam('code_editor_inline'),
    c =
      '<svg width="24" height="24" style="fill: rgb(34, 47, 62);"><g fill-rule="nonzero"><path d="M9.8 15.7c.3.3.3.8 0 1-.3.4-.9.4-1.2 0l-4.4-4.1a.8.8 0 010-1.2l4.4-4.2c.3-.3.9-.3 1.2 0 .3.3.3.8 0 1.1L6 12l3.8 3.7zM14.2 15.7c-.3.3-.3.8 0 1 .4.4.9.4 1.2 0l4.4-4.1c.3-.3.3-.9 0-1.2l-4.4-4.2a.8.8 0 00-1.2 0c-.3.3-.3.8 0 1.1L18 12l-3.8 3.7z"></path></g></svg>',
    d =
      '<svg width="20px" height="20px" viewBox="0 0 25 25"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><path d="M4,5 C4,4.71874859 4.0963532,4.4817718 4.2890625,4.2890625 C4.4817718,4.0963532 4.71874859,4 5,4 L11,4 C11.2812514,4 11.5182282,4.0963532 11.7109375,4.2890625 C11.9036468,4.4817718 12,4.71874859 12,5 C12,5.28125141 11.9036468,5.5182282 11.7109375,5.7109375 C11.5182282,5.9036468 11.2812514,6 11,6 L7.421875,6 L18,16.578125 L18,13 C18,12.7187486 18.0963532,12.4817718 18.2890625,12.2890625 C18.4817718,12.0963532 18.7187486,12 19,12 C19.2812514,12 19.5182282,12.0963532 19.7109375,12.2890625 C19.9036468,12.4817718 20,12.7187486 20,13 L20,19 C20,19.2812514 19.9036468,19.5182282 19.7109375,19.7109375 C19.5182282,19.9036468 19.2812514,20 19,20 L13,20 C12.7187486,20 12.4817718,19.9036468 12.2890625,19.7109375 C12.0963532,19.5182282 12,19.2812514 12,19 C12,18.7187486 12.0963532,18.4817718 12.2890625,18.2890625 C12.4817718,18.0963532 12.7187486,18 13,18 L16.578125,18 L6,7.421875 L6,11 C6,11.2812514 5.9036468,11.5182282 5.7109375,11.7109375 C5.5182282,11.9036468 5.28125141,12 5,12 C4.71874859,12 4.4817718,11.9036468 4.2890625,11.7109375 C4.0963532,11.5182282 4,11.2812514 4,11 L4,5 Z" fill="#000000"/></g></svg>';
  let l = !0;
  e.ui.registry.addButton('acecode', {
    icon: 'sourcecode',
    tooltip: BUTTON_TOOL_TIP,
    onAction: function () {
      i ? a(this, e) : r(e);
    }
  }),
    e.ui.registry.addMenuItem('acecode', {
      icon: 'sourcecode',
      text: 'Code Editor',
      onAction: function () {
        i ? a(this, e) : r(e);
      }
    });
  const s = (e) => e.getContent({ source_view: !0 });
  document.querySelector(`#${CSS.escape(e.id)}`).addEventListener('change', () => {
    e.setContent($(this).val());
  });
  const a = (e, t) => {
      l = !l;
      const i = 'ace-editor-' + t.id,
        u = document.querySelector(`#${CSS.escape(t.id)}`);
      if (l) {
        if ((t.mode.set('design'), u.classList.add('hidden'), 'undefined' != typeof ace)) {
          ace.edit(i).destroy();
          const e = document.querySelector(`#${i}-inline-container`);
          e.parentElement.removeChild(e);
        }
        t.container.classList.remove('hidden');
      } else if (
        (t.mode.set('readonly'),
        (u.value = t.dom.decode(s(t))),
        (u.style.height = t.getDoc().documentElement.scrollHeight),
        'undefined' != typeof ace)
      ) {
        u.classList.add('hidden');
        const l = document.createElement('div');
        (l.id = `${i}-inline-container`),
          (l.className = 'acecode-inline'),
          (l.innerHTML =
            '<div class="inline-container-header">' +
            `<button id="${i}-toggleCode" class="acecode-inline-btn toggle" ` +
            `  title="${BUTTON_TOOL_TIP}" type="button" tabIndex="-1" ` +
            '>' +
            c +
            '</button>' +
            `<button id="${i}-fullscreenMode" class="acecode-inline-btn fullscreen"` +
            '  title="Fullscreen" type="button" tabIndex="-1">' +
            d +
            '</button></div>' +
            `<div id="${i}"></div>`),
          u.parentElement.insertBefore(l, t.container),
          document.querySelector(`#${CSS.escape(i)}-toggleCode`).addEventListener('click', () => {
            a(e, t);
          }),
          document.querySelector(`#${CSS.escape(i)}-fullscreenMode`).addEventListener('click', () => {
            r(t);
          });
        const s = ace.edit(i);
        (n.inline = s),
          (s.$blockScrolling = 'Infinity'),
          s.setTheme(o.theme),
          s.session.setMode(o.mode),
          s.setValue(u.value, 1),
          s.setOptions({ ...o.options, minLines: Math.round(300 / 17), maxLines: Math.round(300 / 17) }),
          s.on('change', function () {
            (u.value = s.getValue()), t.setContent(s.getValue());
          }),
          t.container.classList.add('hidden');
      }
    },
    r = function (e) {
      e.windowManager.open({
        title: 'Code Editor',
        size: 'large',
        body: {
          type: 'panel',
          items: [{ type: 'htmlpanel', html: '<div id="mce-ace-editor-block"></div>', name: 'code' }]
        },
        buttons: []
      });
      const t = document.getElementsByClassName('tox-dialog--width-lg')[0];
      if (i) {
        const e = t.querySelector('.tox-dialog__header button');
        e.setAttribute('title', 'Exit fullscreen'), (e.querySelector('.tox-icon').innerHTML = d);
      }
      t.classList.add('fullscreen'), t.classList.add('acecode');
      const c = ace.edit('mce-ace-editor-block');
      (n.fullscreen = c),
        c.setTheme(o.theme),
        c.getSession().setMode(o.mode),
        c.setOptions(o.options),
        c.getSession().setValue(s(e));
      const l = document.querySelector(`#${CSS.escape(e.id)}`);
      c.on('change', function () {
        (l.value = c.getValue()),
          e.setContent(c.getValue()),
          i && n.inline.getSession().setValue(c.getValue()),
          e.fire('external_change');
      });
    };
});
