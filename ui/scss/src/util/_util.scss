/*!
 * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


@mixin m($property, $ax, $value) {

  $name: str-slice($property, 1, 2);
  $name: str-insert($name, str-slice($ax, 1, 2), 2);
  $name: str-insert($name, quote("#{$value}"), 3);

  @if(str-length(quote("#{$value}")) == 2) {
    $name: str-slice($name, 1, 4);
  } @else if(str-length(quote("#{$value}")) == 3) {
    $name: str-slice($name, 1, 5);
  } @else if(str-length(quote("#{$value}")) == 1) {
    $name: str-slice($name, 1, 3);
  }

  .#{$name} {
    #{$property}-#{$ax}: #{$value}px !important;
  }

}

@mixin p($property, $value) {

  $name: str-slice($property, 1, 2);
  $name: str-insert($name, quote("#{$value}"), 2);

  @if(str-length(quote("#{$value}")) == 2) {
    $name: str-slice($name, 1, 3);
  } @else if(str-length(quote("#{$value}")) == 3) {
    $name: str-slice($name, 1, 4);
  } @else if(str-length(quote("#{$value}")) == 1) {
    $name: str-slice($name, 1, 2);
  }

  .#{$name} {
    #{$property}: #{$value}px !important;
  }

}

.no-margin {
  margin: 0;
}

@include p(margin, 0);
@include p(margin, 1);
@include p(margin, 5);
@include p(margin, 10);
@include p(margin, 15);
@include p(margin, 20);

@include m(margin, top, 0);
@include m(margin, top, 5);
@include m(margin, top, 10);
@include m(margin, top, 15);
@include m(margin, top, 20);
@include m(margin, top, 25);
@include m(margin, top, 30);
@include m(margin, top, 35);
@include m(margin, top, 40);
@include m(margin, top, 45);
@include m(margin, top, 50);

@include m(margin, right, 0);
@include m(margin, right, 5);
@include m(margin, right, 10);
@include m(margin, right, 15);
@include m(margin, right, 20);
@include m(margin, right, 25);
@include m(margin, right, 30);
@include m(margin, right, 35);
@include m(margin, right, 40);
@include m(margin, right, 45);
@include m(margin, right, 50);

@include m(margin, bottom, 0);
@include m(margin, bottom, 5);
@include m(margin, bottom, 10);
@include m(margin, bottom, 15);
@include m(margin, bottom, 20);
@include m(margin, bottom, 25);
@include m(margin, bottom, 30);
@include m(margin, bottom, 35);
@include m(margin, bottom, 40);
@include m(margin, bottom, 45);
@include m(margin, bottom, 50);

@include m(margin, left, 0);
@include m(margin, left, 5);
@include m(margin, left, 10);
@include m(margin, left, 15);
@include m(margin, left, 20);
@include m(margin, left, 25);
@include m(margin, left, 30);
@include m(margin, left, 35);
@include m(margin, left, 40);
@include m(margin, left, 45);
@include m(margin, left, 50);

.unpadded,
.no-padding {
  padding: 0;
}

@include p(padding, 0);
@include p(padding, 5);
@include p(padding, 10);
@include p(padding, 15);
@include p(padding, 20);

@include m(padding, top, 0);
@include m(padding, top, 5);
@include m(padding, top, 10);
@include m(padding, top, 15);
@include m(padding, top, 20);
@include m(padding, top, 25);
@include m(padding, top, 30);
@include m(padding, top, 35);
@include m(padding, top, 40);
@include m(padding, top, 45);
@include m(padding, top, 50);

@include m(padding, right, 0);
@include m(padding, right, 5);
@include m(padding, right, 10);
@include m(padding, right, 15);
@include m(padding, right, 20);
@include m(padding, right, 25);
@include m(padding, right, 30);
@include m(padding, right, 35);
@include m(padding, right, 40);
@include m(padding, right, 45);
@include m(padding, right, 50);

@include m(padding, bottom, 0);
@include m(padding, bottom, 5);
@include m(padding, bottom, 10);
@include m(padding, bottom, 15);
@include m(padding, bottom, 20);
@include m(padding, bottom, 25);
@include m(padding, bottom, 30);
@include m(padding, bottom, 35);
@include m(padding, bottom, 40);
@include m(padding, bottom, 45);
@include m(padding, bottom, 50);

@include m(padding, left, 0);
@include m(padding, left, 5);
@include m(padding, left, 10);
@include m(padding, left, 15);
@include m(padding, left, 20);
@include m(padding, left, 25);
@include m(padding, left, 30);
@include m(padding, left, 35);
@include m(padding, left, 40);
@include m(padding, left, 45);
@include m(padding, left, 50);

.auto-height,
.height-auto {
  height: auto !important;
}

@include m(min, height, 50);
@include m(min, height, 70);
@include m(min, height, 100);
@include m(min, height, 200);
@include m(min, height, 300);

.auto-width,
.width-auto {
  width: auto !important;;
}

.center-block {
  margin-left: auto;
  margin-right: auto;
}

.display-block {
  display: block !important;
}

.table,
.display-table {

  width: 100%;
  display: table;

  .cell {
    display: table-cell;
    vertical-align: middle;
  }

}

@include m(border, top, 0);
@include m(border, bottom, 0);
@include m(border, right, 0);
@include m(border, left, 0);

.no-min-height,
.min-height-none {
  min-height: 0 !important;
}








.no-box-shadow {
  box-shadow: none !important;
}

.tar {
  text-align: right !important;
}

.tal {
  text-align: left !important;
}

.tac {
  text-align: center !important;
}

.no-border {
  border: none !important;
}

.square {
  border-radius: 0 !important;
}

.round {
  border-radius: 5px;
}

.round-top {
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
}

.round-right {
  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
}

.round-bottom {
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}

.round-left {
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
}

.text-off {
  text-indent: -99999px;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.block {
  display: block;
}

.dinline {
  display: inline !important;
}

.inline-block {
  display: inline-block !important;
}

.uppercase {
  text-transform: uppercase;
}

.underline {
  text-decoration: underline;
}

.width-auto {
  width: auto;
}

.full-width {
  width: 100%;
}

.no-list {
  margin-left: 0;
}

.no-list li {
  list-style: none;
}

.inline-list li {
  float: left;
}

.italic,
.text-italic {
  font-style: italic;
}

.transparent {
  background-color: transparent !important;
}

.bg-white {
  background-color: #ffffff !important;
}

.arial {
  font-family: Arial;
}

.helvetica {
  font-family: helvetica;
}

.bold {
  font-weight: bold !important;
}

.ligher {
  font-weight: lighter;
}

.normal {
  font-weight: normal !important;
}

.c-white {
  color: #ffffff;
}

.c-black {
  color: #000000;
}

.pointer {
  cursor: pointer;
}

a.no-decoration,
.no-decoration {
  text-decoration: none;
}

.overflow-visible {
  overflow: visible;
}

.overflow-hidden {
  overflow: hidden;
}

.cr {
  clear: right;
}

.cl {
  clear: left;
}

.cb {
  clear: both;
}

@mixin cstudioLoadingBar($height, $color) {
  height: $height;
  position: relative;
  background: #555;
  box-shadow: inset 0 -1px 1px rgba(255, 255, 255, 0.3);

  > span {
    display: block;
    height: 3px;
    background-color: $color;
    position: relative;
    overflow: hidden;

    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background-image: -webkit-gradient(linear, 0 0, 100% 100%, color-stop(0.25, rgba(255, 255, 255, 0.3)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.3)), color-stop(0.75, rgba(255, 255, 255, 0.3)), color-stop(0.75, transparent), to(transparent));
      background-image: -moz-linear-gradient(-45deg, rgba(255, 255, 255, 0.3) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.3) 75%, transparent 75%, transparent);
      z-index: 1;
      -webkit-background-size: 50px 50px;
      -moz-background-size: 50px 50px;
      -webkit-animation: move 2s linear infinite;
      overflow: hidden;
    }
  }

  .animate > span {
    > span {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background-image: -webkit-gradient(linear, 0 0, 100% 100%, color-stop(0.25, rgba(255, 255, 255, 0.3)), color-stop(0.25, transparent), color-stop(0.5, transparent), color-stop(0.5, rgba(255, 255, 255, 0.3)), color-stop(0.75, rgba(255, 255, 255, 0.3)), color-stop(0.75, transparent), to(transparent));
      background-image: -moz-linear-gradient(-45deg, rgba(255, 255, 255, 0.3) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.3) 50%, rgba(255, 255, 255, 0.3) 75%, transparent 75%, transparent);
      z-index: 1;
      -webkit-background-size: 50px 50px;
      -moz-background-size: 50px 50px;
      -webkit-animation: move 2s linear infinite;
      overflow: hidden;
    }

    &:after {
      display: none;
    }
  }
}

@-webkit-keyframes move {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 50px 50px;
  }
}
